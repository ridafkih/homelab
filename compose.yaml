services:
  caddy:
    profiles: [network]
    image: ghcr.io/caddybuilds/caddy-cloudflare:latest
    container_name: caddy
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./config/Caddyfile:/etc/caddy/Caddyfile
      - .data/caddy/srv:/srv
      - .data/caddy/data:/data
      - .data/caddy/config:/config
    environment:
      CADDY_DOMAIN: ${CADDY_DOMAIN}
      CLOUDFLARE_API_TOKEN: ${CADDY_CLOUDFLARE_API_TOKEN}
    networks:
      - homelab-network

  pihole:
    profiles: [network]
    container_name: pihole
    image: pihole/pihole:latest
    restart: unless-stopped
    environment:
      TZ: ${PIHOLE_TZ}
      FTLCONF_webserver_api_password: ${PIHOLE_FTLCONF_WEBSERVER_API_PASSWORD}
    volumes:
      - .data/pihole:/etc/pihole
    networks:
      - pihole-network
      - homelab-network
    dns:
      - 1.1.1.1
      - 1.0.0.1

  pihole-tailscale:
    profiles: [network]
    container_name: pihole-tailscale
    image: tailscale/tailscale:latest
    restart: unless-stopped
    depends_on:
      - pihole
    environment:
      TS_HOSTNAME: ${PIHOLE_TAILSCALE_TS_HOSTNAME}
      TS_AUTHKEY: ${PIHOLE_TAILSCALE_TS_AUTHKEY}
      TS_AUTH_ONCE: true
      TS_STATE_DIR: /var/lib/tailscale
      TS_ACCEPT_DNS: false
      TS_USERSPACE: false
    volumes:
      - .data/pihole-tailscale/var/lib/tailscale:/var/lib/tailscale
      - ./config/dnsmasq.conf:/tmp/dnsmasq.conf
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
    networks:
      - pihole-network
    dns:
      - 1.1.1.1
      - 1.0.0.1
    command: >
      sh -c "
        apk add --no-cache dnsmasq &&
        until nc -z pihole 53; do sleep 2; done &&
        dnsmasq --conf-file=/tmp/dnsmasq.conf --no-daemon &
        exec /usr/local/bin/containerboot
      "

  jellyfin:
    profiles: [media]
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    volumes:
      - .data/jellyfin/config:/config
      - .data/jellyfin/cache:/cache
      - /data/media/:/media:ro
    restart: always
    runtime: nvidia
    environment:
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: compute,video,utility
    networks:
      - homelab-network

  ollama:
    profiles: [ai]
    image: ollama/ollama:latest
    container_name: ollama
    restart: always
    volumes:
      - .data/ollama/root/.ollama:/root/.ollama
    runtime: nvidia
    environment:
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: compute,utility
      CONTEXT_LENGTH: ${OLLAMA_CONTEXT_LENGTH}
    networks:
      - homelab-network

  open-webui:
    profiles: [ai]
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    volumes:
      - .data/open-webui/app/backend/data:/app/backend/data
    restart: always
    networks:
      - homelab-network

networks:
  pihole-network:
  homelab-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
